{"version":3,"sources":["styles.js","App.js","index.js"],"names":["appStyles","css","display","maxWidth","minWidth","padding","margin","backgroundColor","gridContainerStyles","listStyle","> section > div > figure","> img","width","objectFit","gridBase","gridGap","@media only screen and (max-width: 599px)","> div:not(:first-child)","marginTop","firstRowStyles","> div:first-child","gridColumn","@media only screen and (min-width: 600px)","gridTemplateColumns","@media only screen and (min-width: 900px)","@media only screen and (min-width: 1023px)","@media only screen and (min-width: 1200px)","secondRowStyles","@media only screen and (min-width: 774px)","thirdRowStyles","App","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","_isMounted","state","apiData","props","inherits","createClass","key","value","_this2","axios","get","then","_ref","data","setState","catch","error","console","log","_this$state$apiData","react_default","a","createElement","App_Grid","Component","Grid","_ref2","slice","map","item","index","App_GridItem","id","GridItem","_ref3","src","artwork","alt","title","content","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.91af25c2.chunk.js","sourcesContent":["import { css } from 'glamor'\n\nexport const appStyles = css({\n  display: 'block',\n  maxWidth: '1450px',\n  minWidth: '320px',\n  padding: '11px',\n  margin: '0 auto',\n  backgroundColor: 'white',\n})\n\nexport const gridContainerStyles = css({\n  listStyle: 'none',\n  display: 'grid',\n  padding: '0',\n  '> section > div > figure': {\n    margin: '0',\n    '> img': {\n      width: '100%',\n      // height: '100%',\n      objectFit: 'cover',\n    },\n  },\n})\nexport const gridBase = css({\n  display: 'grid',\n  gridGap: '1rem',\n  '@media only screen and (max-width: 599px)': {\n    /* for-small-phone-only */\n    display: 'block',\n    '> div:not(:first-child)': {\n      marginTop: '2rem',\n    },\n  },\n})\nexport const firstRowStyles = css(gridBase, {\n  '> div:first-child': {\n    gridColumn: 'span 2',\n  },\n  '@media only screen and (min-width: 600px)': {\n    /* for-tablet-portrait-up */\n    gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n  },\n  '@media only screen and (min-width: 900px)': {\n    /* for-tablet-landscape-up */\n    gridTemplateColumns: 'repeat(auto-fit, minmax(275px, 1fr))',\n  },\n  '@media only screen and (min-width: 1023px)': {\n    /* for-desktop-up */\n    gridTemplateColumns: 'repeat(auto-fit, minmax(320px, 1fr))',\n  },\n  '@media only screen and (min-width: 1200px)': {\n    /* for-high-res-desktop-up */\n    gridTemplateColumns: 'repeat(auto-fit, minmax(360px, 1fr))',\n  },\n})\nexport const secondRowStyles = css(gridBase, {\n  marginTop: '2rem',\n  gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n  '@media only screen and (min-width: 774px)': {\n    /* for-tablet-portrait-up */\n    gridTemplateColumns: 'repeat(auto-fit, minmax(170px, 1fr))',\n  },\n  '@media only screen and (min-width: 900px)': {\n    /* for-tablet-landscape-up */\n    gridTemplateColumns: 'repeat(auto-fit, minmax(175px, 1fr))',\n  },\n  '@media only screen and (min-width: 1023px)': {\n    /* for-desktop-up */\n    gridTemplateColumns: 'repeat(auto-fit, minmax(220px, 1fr))',\n  },\n  '@media only screen and (min-width: 1200px)': {\n    /* for-high-res-desktop-up */\n    gridTemplateColumns: 'repeat(auto-fit, minmax(260px, 1fr))',\n  },\n})\n\nexport const thirdRowStyles = css(gridBase, {\n  marginTop: '2rem',\n  gridTemplateColumns: 'repeat(auto-fit, minmax(175px, 1fr))',\n  '@media only screen and (max-width: 599px)': {\n    /* for-small-phone-only */\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    '> div:not(:first-child)': {\n      marginTop: '0',\n    },\n  },\n  '@media only screen and (min-width: 774px)': {\n    /* for-tablet-portrait-up */\n    gridTemplateColumns: 'repeat(auto-fit, minmax(100px, 1fr))',\n  },\n  '@media only screen and (min-width: 900px)': {\n    /* for-tablet-landscape-up */\n    gridTemplateColumns: 'repeat(auto-fit, minmax(130px, 1fr))',\n  },\n  '@media only screen and (min-width: 1023px)': {\n    /* for-desktop-up */\n    gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\n  },\n  '@media only screen and (min-width: 1200px)': {\n    /* for-high-res-desktop-up */\n    gridTemplateColumns: 'repeat(auto-fit, minmax(180px, 1fr))',\n  },\n})\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport {\n  appStyles,\n  gridContainerStyles,\n  firstRowStyles,\n  secondRowStyles,\n  thirdRowStyles,\n} from './styles.js'\n\nconst API_URL = ' http://demo9164717.mockable.io'\n\nexport class App extends Component {\n  _isMounted = false\n  state = { apiData: this.props.apiData || [] }\n\n  componentDidMount() {\n    this._isMounted = true\n    axios\n      .get(API_URL)\n      .then(({ data }) => {\n        // handle success\n        // console.log(data)\n        if (this._isMounted) {\n          this.setState(() => ({ apiData: data }))\n        }\n      })\n      .catch(error => {\n        // handle error\n        console.log(error)\n      })\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  render() {\n    const { apiData = [] } = this.state\n    return <Grid apiData={apiData} />\n  }\n}\n\nexport const Grid = ({ apiData }) => {\n  return (\n    <div {...appStyles}>\n      <div {...gridContainerStyles}>\n        <section {...firstRowStyles}>\n          {apiData.length !== 0 &&\n            apiData\n              .slice(0, 5)\n              .map((item, index) => <GridItem key={item.id} item={item} />)}\n        </section>\n        <section {...secondRowStyles}>\n          {apiData.length !== 0 &&\n            apiData\n              .slice(5, 9)\n              .map((item, index) => <GridItem key={item.id} item={item} />)}\n        </section>\n        <section {...thirdRowStyles}>\n          {apiData.length !== 0 &&\n            apiData\n              .slice(9, 15)\n              .map((item, index) => <GridItem key={item.id} item={item} />)}\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport const GridItem = ({ item }) => (\n  <div>\n    <figure>\n      <img src={item.artwork} alt={item.title} />\n      <figcaption>\n        <h3>{`${item.id}. ${item.title}`}</h3>\n        {item.content}\n      </figcaption>\n    </figure>\n  </div>\n)\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}